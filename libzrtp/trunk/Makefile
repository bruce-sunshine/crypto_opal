# Makefile.in generated by automake 1.15 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Copyright (c) 2006-2007 Philip R. Zimmermann. All rights reserved.
# Contact: http://philzimmermann.com
# 
# Viktor Krikun <v.krikun@soft-industry.com> <v.krikun@gmail.com>
#



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libzrtp
pkgincludedir = $(includedir)/libzrtp
pkglibdir = $(libdir)/libzrtp
pkglibexecdir = $(libexecdir)/libzrtp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = arm-unknown-linux-gnu
target_triplet = arm-unknown-linux-gnu
#am__append_1 = $(top_srcdir)/include/zrtp_cache_db.h \
#						   $(top_srcdir)/include/zrtp_cache_db_backend.h \
#						   $(top_srcdir)/include/zrtp_b64_decode.h \
#						   $(top_srcdir)/include/zrtp_b64_encode.h

#am__append_2 = $(top_srcdir)/src/zrtp_cache_db.c \
#					$(top_srcdir)/src/zrtp_cache_sqlite_backend.c \
#					$(top_srcdir)/src/zrtp_b64_decode.c \
#					$(top_srcdir)/src/zrtp_b64_encode.c

check_PROGRAMS = cache_test$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__libzrtp_include_HEADERS_DIST) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/config.h
CONFIG_CLEAN_FILES = doc/Doxyfile
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libzrtp_includedir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libzrtp_a_AR = $(AR) $(ARFLAGS)
libzrtp_a_DEPENDENCIES = $(top_srcdir)/third_party/bnlib/libbn.a
am__libzrtp_a_SOURCES_DIST = $(top_srcdir)/src/zrtp.c \
	$(top_srcdir)/src/zrtp_cache.c \
	$(top_srcdir)/src/zrtp_cache_file.c \
	$(top_srcdir)/src/zrtp_crc.c \
	$(top_srcdir)/src/zrtp_crypto_aes.c \
	$(top_srcdir)/src/zrtp_crypto_atl.c \
	$(top_srcdir)/src/zrtp_crypto_ec.c \
	$(top_srcdir)/src/zrtp_crypto_ecdh.c \
	$(top_srcdir)/src/zrtp_crypto_hash.c \
	$(top_srcdir)/src/zrtp_crypto_pk.c \
	$(top_srcdir)/src/zrtp_crypto_sas.c \
	$(top_srcdir)/src/zrtp_datatypes.c \
	$(top_srcdir)/src/zrtp_engine.c \
	$(top_srcdir)/src/zrtp_iface_scheduler.c \
	$(top_srcdir)/src/zrtp_iface_sys.c \
	$(top_srcdir)/src/zrtp_initiator.c \
	$(top_srcdir)/src/zrtp_legal.c $(top_srcdir)/src/zrtp_list.c \
	$(top_srcdir)/src/zrtp_log.c $(top_srcdir)/src/zrtp_pbx.c \
	$(top_srcdir)/src/zrtp_protocol.c \
	$(top_srcdir)/src/zrtp_responder.c \
	$(top_srcdir)/src/zrtp_rng.c $(top_srcdir)/src/zrtp_sdes.c \
	$(top_srcdir)/src/zrtp_srtp_builtin.c \
	$(top_srcdir)/src/zrtp_string.c $(top_srcdir)/src/zrtp_utils.c \
	$(top_srcdir)/src/zrtp_utils_proto.c \
	$(top_srcdir)/third_party/bgaes/aes_modes.c \
	$(top_srcdir)/third_party/bgaes/aescrypt.c \
	$(top_srcdir)/third_party/bgaes/aeskey.c \
	$(top_srcdir)/third_party/bgaes/aestab.c \
	$(top_srcdir)/third_party/bgaes/sha1.c \
	$(top_srcdir)/third_party/bgaes/sha2.c \
	$(top_srcdir)/src/zrtp_engine_driven.c \
	$(top_srcdir)/src/zrtp_cache_db.c \
	$(top_srcdir)/src/zrtp_cache_sqlite_backend.c \
	$(top_srcdir)/src/zrtp_b64_decode.c \
	$(top_srcdir)/src/zrtp_b64_encode.c
#am__objects_1 =  \
#	libzrtp_a-zrtp_cache_db.$(OBJEXT) \
#	libzrtp_a-zrtp_cache_sqlite_backend.$(OBJEXT) \
#	libzrtp_a-zrtp_b64_decode.$(OBJEXT) \
#	libzrtp_a-zrtp_b64_encode.$(OBJEXT)
am_libzrtp_a_OBJECTS = libzrtp_a-zrtp.$(OBJEXT) \
	libzrtp_a-zrtp_cache.$(OBJEXT) \
	libzrtp_a-zrtp_cache_file.$(OBJEXT) \
	libzrtp_a-zrtp_crc.$(OBJEXT) \
	libzrtp_a-zrtp_crypto_aes.$(OBJEXT) \
	libzrtp_a-zrtp_crypto_atl.$(OBJEXT) \
	libzrtp_a-zrtp_crypto_ec.$(OBJEXT) \
	libzrtp_a-zrtp_crypto_ecdh.$(OBJEXT) \
	libzrtp_a-zrtp_crypto_hash.$(OBJEXT) \
	libzrtp_a-zrtp_crypto_pk.$(OBJEXT) \
	libzrtp_a-zrtp_crypto_sas.$(OBJEXT) \
	libzrtp_a-zrtp_datatypes.$(OBJEXT) \
	libzrtp_a-zrtp_engine.$(OBJEXT) \
	libzrtp_a-zrtp_iface_scheduler.$(OBJEXT) \
	libzrtp_a-zrtp_iface_sys.$(OBJEXT) \
	libzrtp_a-zrtp_initiator.$(OBJEXT) \
	libzrtp_a-zrtp_legal.$(OBJEXT) libzrtp_a-zrtp_list.$(OBJEXT) \
	libzrtp_a-zrtp_log.$(OBJEXT) libzrtp_a-zrtp_pbx.$(OBJEXT) \
	libzrtp_a-zrtp_protocol.$(OBJEXT) \
	libzrtp_a-zrtp_responder.$(OBJEXT) \
	libzrtp_a-zrtp_rng.$(OBJEXT) libzrtp_a-zrtp_sdes.$(OBJEXT) \
	libzrtp_a-zrtp_srtp_builtin.$(OBJEXT) \
	libzrtp_a-zrtp_string.$(OBJEXT) libzrtp_a-zrtp_utils.$(OBJEXT) \
	libzrtp_a-zrtp_utils_proto.$(OBJEXT) \
	libzrtp_a-aes_modes.$(OBJEXT) libzrtp_a-aescrypt.$(OBJEXT) \
	libzrtp_a-aeskey.$(OBJEXT) libzrtp_a-aestab.$(OBJEXT) \
	libzrtp_a-sha1.$(OBJEXT) libzrtp_a-sha2.$(OBJEXT) \
	libzrtp_a-zrtp_engine_driven.$(OBJEXT) $(am__objects_1)
libzrtp_a_OBJECTS = $(am_libzrtp_a_OBJECTS)
am_cache_test_OBJECTS = cache_test-cmockery.$(OBJEXT) \
	cache_test-cache_test.$(OBJEXT)
cache_test_OBJECTS = $(am_cache_test_OBJECTS)
cache_test_DEPENDENCIES = libzrtp.a \
	$(top_srcdir)/third_party/bnlib/libbn.a
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libzrtp_a_SOURCES) $(cache_test_SOURCES)
DIST_SOURCES = $(am__libzrtp_a_SOURCES_DIST) $(cache_test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__libzrtp_include_HEADERS_DIST = $(top_srcdir)/include/zrtp.h \
	$(top_srcdir)/include/zrtp_base.h \
	$(top_srcdir)/include/zrtp_cache.h \
	$(top_srcdir)/include/zrtp_cache_file.h \
	$(top_srcdir)/include/zrtp_config.h \
	$(top_srcdir)/include/zrtp_config_user.h \
	$(top_srcdir)/include/zrtp_config_unix.h \
	$(top_srcdir)/include/zrtp_crypto.h \
	$(top_srcdir)/include/zrtp_ec.h \
	$(top_srcdir)/include/zrtp_engine.h \
	$(top_srcdir)/include/zrtp_error.h \
	$(top_srcdir)/include/zrtp_iface.h \
	$(top_srcdir)/include/zrtp_iface_scheduler.h \
	$(top_srcdir)/include/zrtp_iface_system.h \
	$(top_srcdir)/include/zrtp_legal.h \
	$(top_srcdir)/include/zrtp_list.h \
	$(top_srcdir)/include/zrtp_log.h \
	$(top_srcdir)/include/zrtp_pbx.h \
	$(top_srcdir)/include/zrtp_protocol.h \
	$(top_srcdir)/include/zrtp_sdes.h \
	$(top_srcdir)/include/zrtp_srtp.h \
	$(top_srcdir)/include/zrtp_srtp_builtin.h \
	$(top_srcdir)/include/zrtp_string.h \
	$(top_srcdir)/include/zrtp_types.h \
	$(top_srcdir)/include/zrtp_version.h \
	$(top_srcdir)/third_party/bnlib/bn.h \
	$(top_srcdir)/third_party/bgaes/aes.h \
	$(top_srcdir)/third_party/bgaes/aesopt.h \
	$(top_srcdir)/third_party/bgaes/aestab.h \
	$(top_srcdir)/third_party/bgaes/bg2zrtp.h \
	$(top_srcdir)/third_party/bgaes/brg_types.h \
	$(top_srcdir)/third_party/bgaes/sha1.h \
	$(top_srcdir)/third_party/bgaes/sha2.h \
	$(top_srcdir)/include/zrtp_cache_db.h \
	$(top_srcdir)/include/zrtp_cache_db_backend.h \
	$(top_srcdir)/include/zrtp_b64_decode.h \
	$(top_srcdir)/include/zrtp_b64_encode.h
HEADERS = $(libzrtp_include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/compile \
	$(top_srcdir)/config/config.guess \
	$(top_srcdir)/config/config.h.in \
	$(top_srcdir)/config/config.sub $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/install-sh $(top_srcdir)/config/missing \
	$(top_srcdir)/doc/Doxyfile.in AUTHORS COPYING ChangeLog \
	INSTALL NEWS README config/compile config/config.guess \
	config/config.sub config/depcomp config/install-sh \
	config/ltmain.sh config/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk/config/missing autoconf
AUTOHEADER = ${SHELL} /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk/config/missing autoheader
AUTOMAKE = ${SHELL} /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk/config/missing automake-1.15
AWK = gawk
CC = arm-arago-linux-gnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -std=c99 -O2 -g3 -Wall -Wextra -Wno-unused-parameter -fno-strict-aliasing -fPIC -DZRTP_AUTOMAKE=1
CPP = arm-arago-linux-gnueabi-gcc -E
CPPFLAGS = 
CXX = arm-arago-linux-gnueabi-g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS =  ${LIBOBJDIR}malloc$U.o
LIBS = -lpthread 
LTLIBOBJS =  ${LIBOBJDIR}malloc$U.lo
MAKEINFO = ${SHELL} /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk/config/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = libzrtp
PACKAGE_BUGREPORT = 
PACKAGE_NAME = libzrtp
PACKAGE_STRING = libzrtp 1.2.0
PACKAGE_TARNAME = libzrtp
PACKAGE_URL = 
PACKAGE_VERSION = 1.2.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.2.0
abs_builddir = /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk
abs_srcdir = /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk
abs_top_builddir = /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk
abs_top_srcdir = /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk
ac_ct_CC = 
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-unknown-linux-gnu
host_alias = arm-linux
host_cpu = arm
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/lee/zrtp_bruce/zrtp_rebuild/rebuild/libzrtp/trunk/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = arm-unknown-linux-gnu
target_alias = 
target_cpu = arm
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = 
top_builddir = .
top_srcdir = .
libzrtp_includedir = $(includedir)/libzrtp
libzrtp_include_HEADERS = $(top_srcdir)/include/zrtp.h \
	$(top_srcdir)/include/zrtp_base.h \
	$(top_srcdir)/include/zrtp_cache.h \
	$(top_srcdir)/include/zrtp_cache_file.h \
	$(top_srcdir)/include/zrtp_config.h \
	$(top_srcdir)/include/zrtp_config_user.h \
	$(top_srcdir)/include/zrtp_config_unix.h \
	$(top_srcdir)/include/zrtp_crypto.h \
	$(top_srcdir)/include/zrtp_ec.h \
	$(top_srcdir)/include/zrtp_engine.h \
	$(top_srcdir)/include/zrtp_error.h \
	$(top_srcdir)/include/zrtp_iface.h \
	$(top_srcdir)/include/zrtp_iface_scheduler.h \
	$(top_srcdir)/include/zrtp_iface_system.h \
	$(top_srcdir)/include/zrtp_legal.h \
	$(top_srcdir)/include/zrtp_list.h \
	$(top_srcdir)/include/zrtp_log.h \
	$(top_srcdir)/include/zrtp_pbx.h \
	$(top_srcdir)/include/zrtp_protocol.h \
	$(top_srcdir)/include/zrtp_sdes.h \
	$(top_srcdir)/include/zrtp_srtp.h \
	$(top_srcdir)/include/zrtp_srtp_builtin.h \
	$(top_srcdir)/include/zrtp_string.h \
	$(top_srcdir)/include/zrtp_types.h \
	$(top_srcdir)/include/zrtp_version.h \
	$(top_srcdir)/third_party/bnlib/bn.h \
	$(top_srcdir)/third_party/bgaes/aes.h \
	$(top_srcdir)/third_party/bgaes/aesopt.h \
	$(top_srcdir)/third_party/bgaes/aestab.h \
	$(top_srcdir)/third_party/bgaes/bg2zrtp.h \
	$(top_srcdir)/third_party/bgaes/brg_types.h \
	$(top_srcdir)/third_party/bgaes/sha1.h \
	$(top_srcdir)/third_party/bgaes/sha2.h $(am__append_1)
lib_LIBRARIES = libzrtp.a
libzrtp_a_CPPFLAGS = \
			-I$(top_srcdir)/include \
			-I$(top_srcdir)/. \
			-I$(top_srcdir)/third_party/bgaes \
			-I$(top_srcdir)/third_party/bnlib

libzrtp_a_LIBADD = $(top_srcdir)/third_party/bnlib/libbn.a
libzrtp_a_SOURCES = $(top_srcdir)/src/zrtp.c \
	$(top_srcdir)/src/zrtp_cache.c \
	$(top_srcdir)/src/zrtp_cache_file.c \
	$(top_srcdir)/src/zrtp_crc.c \
	$(top_srcdir)/src/zrtp_crypto_aes.c \
	$(top_srcdir)/src/zrtp_crypto_atl.c \
	$(top_srcdir)/src/zrtp_crypto_ec.c \
	$(top_srcdir)/src/zrtp_crypto_ecdh.c \
	$(top_srcdir)/src/zrtp_crypto_hash.c \
	$(top_srcdir)/src/zrtp_crypto_pk.c \
	$(top_srcdir)/src/zrtp_crypto_sas.c \
	$(top_srcdir)/src/zrtp_datatypes.c \
	$(top_srcdir)/src/zrtp_engine.c \
	$(top_srcdir)/src/zrtp_iface_scheduler.c \
	$(top_srcdir)/src/zrtp_iface_sys.c \
	$(top_srcdir)/src/zrtp_initiator.c \
	$(top_srcdir)/src/zrtp_legal.c $(top_srcdir)/src/zrtp_list.c \
	$(top_srcdir)/src/zrtp_log.c $(top_srcdir)/src/zrtp_pbx.c \
	$(top_srcdir)/src/zrtp_protocol.c \
	$(top_srcdir)/src/zrtp_responder.c \
	$(top_srcdir)/src/zrtp_rng.c $(top_srcdir)/src/zrtp_sdes.c \
	$(top_srcdir)/src/zrtp_srtp_builtin.c \
	$(top_srcdir)/src/zrtp_string.c $(top_srcdir)/src/zrtp_utils.c \
	$(top_srcdir)/src/zrtp_utils_proto.c \
	$(top_srcdir)/third_party/bgaes/aes_modes.c \
	$(top_srcdir)/third_party/bgaes/aescrypt.c \
	$(top_srcdir)/third_party/bgaes/aeskey.c \
	$(top_srcdir)/third_party/bgaes/aestab.c \
	$(top_srcdir)/third_party/bgaes/sha1.c \
	$(top_srcdir)/third_party/bgaes/sha2.c \
	$(top_srcdir)/src/zrtp_engine_driven.c $(am__append_2)
cache_test_CPPFLAGS = -I$(top_srcdir)/include \
			-I$(top_srcdir)/. \
			-I$(top_srcdir)/test \
			-I$(top_srcdir)/test/cmockery \
			-I$(top_srcdir)/third_party/bgaes \
			-I$(top_srcdir)/third_party/bnlib

cache_test_SOURCES = $(top_srcdir)/test/cmockery/cmockery.c \
					 $(top_srcdir)/test/cache_test.c

cache_test_LDADD = libzrtp.a  $(top_srcdir)/third_party/bnlib/libbn.a -lpthread
SUBDIRS = third_party/bnlib
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config/config.h: config/stamp-h1
	@test -f $@ || rm -f config/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) config/stamp-h1

config/stamp-h1: $(top_srcdir)/config/config.h.in $(top_builddir)/config.status
	@rm -f config/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config/config.h
$(top_srcdir)/config/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f config/stamp-h1
	touch $@

distclean-hdr:
	-rm -f config/config.h config/stamp-h1
doc/Doxyfile: $(top_builddir)/config.status $(top_srcdir)/doc/Doxyfile.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libzrtp.a: $(libzrtp_a_OBJECTS) $(libzrtp_a_DEPENDENCIES) $(EXTRA_libzrtp_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libzrtp.a
	$(AM_V_AR)$(libzrtp_a_AR) libzrtp.a $(libzrtp_a_OBJECTS) $(libzrtp_a_LIBADD)
	$(AM_V_at)$(RANLIB) libzrtp.a

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

cache_test$(EXEEXT): $(cache_test_OBJECTS) $(cache_test_DEPENDENCIES) $(EXTRA_cache_test_DEPENDENCIES) 
	@rm -f cache_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cache_test_OBJECTS) $(cache_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cache_test-cache_test.Po
include ./$(DEPDIR)/cache_test-cmockery.Po
include ./$(DEPDIR)/libzrtp_a-aes_modes.Po
include ./$(DEPDIR)/libzrtp_a-aescrypt.Po
include ./$(DEPDIR)/libzrtp_a-aeskey.Po
include ./$(DEPDIR)/libzrtp_a-aestab.Po
include ./$(DEPDIR)/libzrtp_a-sha1.Po
include ./$(DEPDIR)/libzrtp_a-sha2.Po
include ./$(DEPDIR)/libzrtp_a-zrtp.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_b64_decode.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_b64_encode.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_cache.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_cache_db.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_cache_file.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_cache_sqlite_backend.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_crc.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_crypto_aes.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_crypto_atl.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_crypto_ec.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_crypto_ecdh.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_crypto_hash.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_crypto_pk.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_crypto_sas.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_datatypes.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_engine.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_engine_driven.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_iface_scheduler.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_iface_sys.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_initiator.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_legal.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_list.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_log.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_pbx.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_protocol.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_responder.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_rng.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_sdes.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_srtp_builtin.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_string.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_utils.Po
include ./$(DEPDIR)/libzrtp_a-zrtp_utils_proto.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libzrtp_a-zrtp.o: $(top_srcdir)/src/zrtp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp.Tpo -c -o libzrtp_a-zrtp.o `test -f '$(top_srcdir)/src/zrtp.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp.Tpo $(DEPDIR)/libzrtp_a-zrtp.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp.c' object='libzrtp_a-zrtp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp.o `test -f '$(top_srcdir)/src/zrtp.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp.c

libzrtp_a-zrtp.obj: $(top_srcdir)/src/zrtp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp.Tpo -c -o libzrtp_a-zrtp.obj `if test -f '$(top_srcdir)/src/zrtp.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp.Tpo $(DEPDIR)/libzrtp_a-zrtp.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp.c' object='libzrtp_a-zrtp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp.obj `if test -f '$(top_srcdir)/src/zrtp.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp.c'; fi`

libzrtp_a-zrtp_cache.o: $(top_srcdir)/src/zrtp_cache.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_cache.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_cache.Tpo -c -o libzrtp_a-zrtp_cache.o `test -f '$(top_srcdir)/src/zrtp_cache.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_cache.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_cache.Tpo $(DEPDIR)/libzrtp_a-zrtp_cache.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_cache.c' object='libzrtp_a-zrtp_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_cache.o `test -f '$(top_srcdir)/src/zrtp_cache.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_cache.c

libzrtp_a-zrtp_cache.obj: $(top_srcdir)/src/zrtp_cache.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_cache.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_cache.Tpo -c -o libzrtp_a-zrtp_cache.obj `if test -f '$(top_srcdir)/src/zrtp_cache.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_cache.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_cache.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_cache.Tpo $(DEPDIR)/libzrtp_a-zrtp_cache.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_cache.c' object='libzrtp_a-zrtp_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_cache.obj `if test -f '$(top_srcdir)/src/zrtp_cache.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_cache.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_cache.c'; fi`

libzrtp_a-zrtp_cache_file.o: $(top_srcdir)/src/zrtp_cache_file.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_cache_file.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_cache_file.Tpo -c -o libzrtp_a-zrtp_cache_file.o `test -f '$(top_srcdir)/src/zrtp_cache_file.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_cache_file.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_cache_file.Tpo $(DEPDIR)/libzrtp_a-zrtp_cache_file.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_cache_file.c' object='libzrtp_a-zrtp_cache_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_cache_file.o `test -f '$(top_srcdir)/src/zrtp_cache_file.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_cache_file.c

libzrtp_a-zrtp_cache_file.obj: $(top_srcdir)/src/zrtp_cache_file.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_cache_file.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_cache_file.Tpo -c -o libzrtp_a-zrtp_cache_file.obj `if test -f '$(top_srcdir)/src/zrtp_cache_file.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_cache_file.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_cache_file.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_cache_file.Tpo $(DEPDIR)/libzrtp_a-zrtp_cache_file.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_cache_file.c' object='libzrtp_a-zrtp_cache_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_cache_file.obj `if test -f '$(top_srcdir)/src/zrtp_cache_file.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_cache_file.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_cache_file.c'; fi`

libzrtp_a-zrtp_crc.o: $(top_srcdir)/src/zrtp_crc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crc.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crc.Tpo -c -o libzrtp_a-zrtp_crc.o `test -f '$(top_srcdir)/src/zrtp_crc.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crc.Tpo $(DEPDIR)/libzrtp_a-zrtp_crc.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crc.c' object='libzrtp_a-zrtp_crc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crc.o `test -f '$(top_srcdir)/src/zrtp_crc.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crc.c

libzrtp_a-zrtp_crc.obj: $(top_srcdir)/src/zrtp_crc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crc.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crc.Tpo -c -o libzrtp_a-zrtp_crc.obj `if test -f '$(top_srcdir)/src/zrtp_crc.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crc.Tpo $(DEPDIR)/libzrtp_a-zrtp_crc.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crc.c' object='libzrtp_a-zrtp_crc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crc.obj `if test -f '$(top_srcdir)/src/zrtp_crc.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crc.c'; fi`

libzrtp_a-zrtp_crypto_aes.o: $(top_srcdir)/src/zrtp_crypto_aes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_aes.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_aes.Tpo -c -o libzrtp_a-zrtp_crypto_aes.o `test -f '$(top_srcdir)/src/zrtp_crypto_aes.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_aes.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_aes.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_aes.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_aes.c' object='libzrtp_a-zrtp_crypto_aes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_aes.o `test -f '$(top_srcdir)/src/zrtp_crypto_aes.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_aes.c

libzrtp_a-zrtp_crypto_aes.obj: $(top_srcdir)/src/zrtp_crypto_aes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_aes.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_aes.Tpo -c -o libzrtp_a-zrtp_crypto_aes.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_aes.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_aes.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_aes.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_aes.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_aes.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_aes.c' object='libzrtp_a-zrtp_crypto_aes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_aes.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_aes.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_aes.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_aes.c'; fi`

libzrtp_a-zrtp_crypto_atl.o: $(top_srcdir)/src/zrtp_crypto_atl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_atl.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_atl.Tpo -c -o libzrtp_a-zrtp_crypto_atl.o `test -f '$(top_srcdir)/src/zrtp_crypto_atl.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_atl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_atl.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_atl.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_atl.c' object='libzrtp_a-zrtp_crypto_atl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_atl.o `test -f '$(top_srcdir)/src/zrtp_crypto_atl.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_atl.c

libzrtp_a-zrtp_crypto_atl.obj: $(top_srcdir)/src/zrtp_crypto_atl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_atl.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_atl.Tpo -c -o libzrtp_a-zrtp_crypto_atl.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_atl.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_atl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_atl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_atl.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_atl.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_atl.c' object='libzrtp_a-zrtp_crypto_atl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_atl.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_atl.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_atl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_atl.c'; fi`

libzrtp_a-zrtp_crypto_ec.o: $(top_srcdir)/src/zrtp_crypto_ec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_ec.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_ec.Tpo -c -o libzrtp_a-zrtp_crypto_ec.o `test -f '$(top_srcdir)/src/zrtp_crypto_ec.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_ec.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_ec.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_ec.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_ec.c' object='libzrtp_a-zrtp_crypto_ec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_ec.o `test -f '$(top_srcdir)/src/zrtp_crypto_ec.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_ec.c

libzrtp_a-zrtp_crypto_ec.obj: $(top_srcdir)/src/zrtp_crypto_ec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_ec.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_ec.Tpo -c -o libzrtp_a-zrtp_crypto_ec.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_ec.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_ec.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_ec.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_ec.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_ec.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_ec.c' object='libzrtp_a-zrtp_crypto_ec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_ec.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_ec.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_ec.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_ec.c'; fi`

libzrtp_a-zrtp_crypto_ecdh.o: $(top_srcdir)/src/zrtp_crypto_ecdh.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_ecdh.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_ecdh.Tpo -c -o libzrtp_a-zrtp_crypto_ecdh.o `test -f '$(top_srcdir)/src/zrtp_crypto_ecdh.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_ecdh.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_ecdh.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_ecdh.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_ecdh.c' object='libzrtp_a-zrtp_crypto_ecdh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_ecdh.o `test -f '$(top_srcdir)/src/zrtp_crypto_ecdh.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_ecdh.c

libzrtp_a-zrtp_crypto_ecdh.obj: $(top_srcdir)/src/zrtp_crypto_ecdh.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_ecdh.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_ecdh.Tpo -c -o libzrtp_a-zrtp_crypto_ecdh.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_ecdh.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_ecdh.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_ecdh.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_ecdh.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_ecdh.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_ecdh.c' object='libzrtp_a-zrtp_crypto_ecdh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_ecdh.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_ecdh.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_ecdh.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_ecdh.c'; fi`

libzrtp_a-zrtp_crypto_hash.o: $(top_srcdir)/src/zrtp_crypto_hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_hash.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_hash.Tpo -c -o libzrtp_a-zrtp_crypto_hash.o `test -f '$(top_srcdir)/src/zrtp_crypto_hash.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_hash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_hash.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_hash.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_hash.c' object='libzrtp_a-zrtp_crypto_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_hash.o `test -f '$(top_srcdir)/src/zrtp_crypto_hash.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_hash.c

libzrtp_a-zrtp_crypto_hash.obj: $(top_srcdir)/src/zrtp_crypto_hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_hash.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_hash.Tpo -c -o libzrtp_a-zrtp_crypto_hash.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_hash.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_hash.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_hash.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_hash.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_hash.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_hash.c' object='libzrtp_a-zrtp_crypto_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_hash.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_hash.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_hash.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_hash.c'; fi`

libzrtp_a-zrtp_crypto_pk.o: $(top_srcdir)/src/zrtp_crypto_pk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_pk.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_pk.Tpo -c -o libzrtp_a-zrtp_crypto_pk.o `test -f '$(top_srcdir)/src/zrtp_crypto_pk.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_pk.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_pk.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_pk.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_pk.c' object='libzrtp_a-zrtp_crypto_pk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_pk.o `test -f '$(top_srcdir)/src/zrtp_crypto_pk.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_pk.c

libzrtp_a-zrtp_crypto_pk.obj: $(top_srcdir)/src/zrtp_crypto_pk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_pk.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_pk.Tpo -c -o libzrtp_a-zrtp_crypto_pk.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_pk.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_pk.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_pk.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_pk.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_pk.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_pk.c' object='libzrtp_a-zrtp_crypto_pk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_pk.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_pk.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_pk.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_pk.c'; fi`

libzrtp_a-zrtp_crypto_sas.o: $(top_srcdir)/src/zrtp_crypto_sas.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_sas.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_sas.Tpo -c -o libzrtp_a-zrtp_crypto_sas.o `test -f '$(top_srcdir)/src/zrtp_crypto_sas.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_sas.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_sas.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_sas.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_sas.c' object='libzrtp_a-zrtp_crypto_sas.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_sas.o `test -f '$(top_srcdir)/src/zrtp_crypto_sas.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_crypto_sas.c

libzrtp_a-zrtp_crypto_sas.obj: $(top_srcdir)/src/zrtp_crypto_sas.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_crypto_sas.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_crypto_sas.Tpo -c -o libzrtp_a-zrtp_crypto_sas.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_sas.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_sas.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_sas.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_crypto_sas.Tpo $(DEPDIR)/libzrtp_a-zrtp_crypto_sas.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_crypto_sas.c' object='libzrtp_a-zrtp_crypto_sas.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_crypto_sas.obj `if test -f '$(top_srcdir)/src/zrtp_crypto_sas.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_crypto_sas.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_crypto_sas.c'; fi`

libzrtp_a-zrtp_datatypes.o: $(top_srcdir)/src/zrtp_datatypes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_datatypes.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_datatypes.Tpo -c -o libzrtp_a-zrtp_datatypes.o `test -f '$(top_srcdir)/src/zrtp_datatypes.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_datatypes.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_datatypes.Tpo $(DEPDIR)/libzrtp_a-zrtp_datatypes.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_datatypes.c' object='libzrtp_a-zrtp_datatypes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_datatypes.o `test -f '$(top_srcdir)/src/zrtp_datatypes.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_datatypes.c

libzrtp_a-zrtp_datatypes.obj: $(top_srcdir)/src/zrtp_datatypes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_datatypes.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_datatypes.Tpo -c -o libzrtp_a-zrtp_datatypes.obj `if test -f '$(top_srcdir)/src/zrtp_datatypes.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_datatypes.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_datatypes.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_datatypes.Tpo $(DEPDIR)/libzrtp_a-zrtp_datatypes.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_datatypes.c' object='libzrtp_a-zrtp_datatypes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_datatypes.obj `if test -f '$(top_srcdir)/src/zrtp_datatypes.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_datatypes.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_datatypes.c'; fi`

libzrtp_a-zrtp_engine.o: $(top_srcdir)/src/zrtp_engine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_engine.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_engine.Tpo -c -o libzrtp_a-zrtp_engine.o `test -f '$(top_srcdir)/src/zrtp_engine.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_engine.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_engine.Tpo $(DEPDIR)/libzrtp_a-zrtp_engine.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_engine.c' object='libzrtp_a-zrtp_engine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_engine.o `test -f '$(top_srcdir)/src/zrtp_engine.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_engine.c

libzrtp_a-zrtp_engine.obj: $(top_srcdir)/src/zrtp_engine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_engine.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_engine.Tpo -c -o libzrtp_a-zrtp_engine.obj `if test -f '$(top_srcdir)/src/zrtp_engine.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_engine.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_engine.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_engine.Tpo $(DEPDIR)/libzrtp_a-zrtp_engine.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_engine.c' object='libzrtp_a-zrtp_engine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_engine.obj `if test -f '$(top_srcdir)/src/zrtp_engine.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_engine.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_engine.c'; fi`

libzrtp_a-zrtp_iface_scheduler.o: $(top_srcdir)/src/zrtp_iface_scheduler.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_iface_scheduler.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_iface_scheduler.Tpo -c -o libzrtp_a-zrtp_iface_scheduler.o `test -f '$(top_srcdir)/src/zrtp_iface_scheduler.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_iface_scheduler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_iface_scheduler.Tpo $(DEPDIR)/libzrtp_a-zrtp_iface_scheduler.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_iface_scheduler.c' object='libzrtp_a-zrtp_iface_scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_iface_scheduler.o `test -f '$(top_srcdir)/src/zrtp_iface_scheduler.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_iface_scheduler.c

libzrtp_a-zrtp_iface_scheduler.obj: $(top_srcdir)/src/zrtp_iface_scheduler.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_iface_scheduler.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_iface_scheduler.Tpo -c -o libzrtp_a-zrtp_iface_scheduler.obj `if test -f '$(top_srcdir)/src/zrtp_iface_scheduler.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_iface_scheduler.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_iface_scheduler.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_iface_scheduler.Tpo $(DEPDIR)/libzrtp_a-zrtp_iface_scheduler.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_iface_scheduler.c' object='libzrtp_a-zrtp_iface_scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_iface_scheduler.obj `if test -f '$(top_srcdir)/src/zrtp_iface_scheduler.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_iface_scheduler.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_iface_scheduler.c'; fi`

libzrtp_a-zrtp_iface_sys.o: $(top_srcdir)/src/zrtp_iface_sys.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_iface_sys.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_iface_sys.Tpo -c -o libzrtp_a-zrtp_iface_sys.o `test -f '$(top_srcdir)/src/zrtp_iface_sys.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_iface_sys.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_iface_sys.Tpo $(DEPDIR)/libzrtp_a-zrtp_iface_sys.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_iface_sys.c' object='libzrtp_a-zrtp_iface_sys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_iface_sys.o `test -f '$(top_srcdir)/src/zrtp_iface_sys.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_iface_sys.c

libzrtp_a-zrtp_iface_sys.obj: $(top_srcdir)/src/zrtp_iface_sys.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_iface_sys.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_iface_sys.Tpo -c -o libzrtp_a-zrtp_iface_sys.obj `if test -f '$(top_srcdir)/src/zrtp_iface_sys.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_iface_sys.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_iface_sys.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_iface_sys.Tpo $(DEPDIR)/libzrtp_a-zrtp_iface_sys.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_iface_sys.c' object='libzrtp_a-zrtp_iface_sys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_iface_sys.obj `if test -f '$(top_srcdir)/src/zrtp_iface_sys.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_iface_sys.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_iface_sys.c'; fi`

libzrtp_a-zrtp_initiator.o: $(top_srcdir)/src/zrtp_initiator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_initiator.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_initiator.Tpo -c -o libzrtp_a-zrtp_initiator.o `test -f '$(top_srcdir)/src/zrtp_initiator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_initiator.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_initiator.Tpo $(DEPDIR)/libzrtp_a-zrtp_initiator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_initiator.c' object='libzrtp_a-zrtp_initiator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_initiator.o `test -f '$(top_srcdir)/src/zrtp_initiator.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_initiator.c

libzrtp_a-zrtp_initiator.obj: $(top_srcdir)/src/zrtp_initiator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_initiator.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_initiator.Tpo -c -o libzrtp_a-zrtp_initiator.obj `if test -f '$(top_srcdir)/src/zrtp_initiator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_initiator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_initiator.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_initiator.Tpo $(DEPDIR)/libzrtp_a-zrtp_initiator.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_initiator.c' object='libzrtp_a-zrtp_initiator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_initiator.obj `if test -f '$(top_srcdir)/src/zrtp_initiator.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_initiator.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_initiator.c'; fi`

libzrtp_a-zrtp_legal.o: $(top_srcdir)/src/zrtp_legal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_legal.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_legal.Tpo -c -o libzrtp_a-zrtp_legal.o `test -f '$(top_srcdir)/src/zrtp_legal.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_legal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_legal.Tpo $(DEPDIR)/libzrtp_a-zrtp_legal.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_legal.c' object='libzrtp_a-zrtp_legal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_legal.o `test -f '$(top_srcdir)/src/zrtp_legal.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_legal.c

libzrtp_a-zrtp_legal.obj: $(top_srcdir)/src/zrtp_legal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_legal.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_legal.Tpo -c -o libzrtp_a-zrtp_legal.obj `if test -f '$(top_srcdir)/src/zrtp_legal.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_legal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_legal.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_legal.Tpo $(DEPDIR)/libzrtp_a-zrtp_legal.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_legal.c' object='libzrtp_a-zrtp_legal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_legal.obj `if test -f '$(top_srcdir)/src/zrtp_legal.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_legal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_legal.c'; fi`

libzrtp_a-zrtp_list.o: $(top_srcdir)/src/zrtp_list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_list.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_list.Tpo -c -o libzrtp_a-zrtp_list.o `test -f '$(top_srcdir)/src/zrtp_list.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_list.Tpo $(DEPDIR)/libzrtp_a-zrtp_list.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_list.c' object='libzrtp_a-zrtp_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_list.o `test -f '$(top_srcdir)/src/zrtp_list.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_list.c

libzrtp_a-zrtp_list.obj: $(top_srcdir)/src/zrtp_list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_list.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_list.Tpo -c -o libzrtp_a-zrtp_list.obj `if test -f '$(top_srcdir)/src/zrtp_list.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_list.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_list.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_list.Tpo $(DEPDIR)/libzrtp_a-zrtp_list.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_list.c' object='libzrtp_a-zrtp_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_list.obj `if test -f '$(top_srcdir)/src/zrtp_list.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_list.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_list.c'; fi`

libzrtp_a-zrtp_log.o: $(top_srcdir)/src/zrtp_log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_log.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_log.Tpo -c -o libzrtp_a-zrtp_log.o `test -f '$(top_srcdir)/src/zrtp_log.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_log.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_log.Tpo $(DEPDIR)/libzrtp_a-zrtp_log.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_log.c' object='libzrtp_a-zrtp_log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_log.o `test -f '$(top_srcdir)/src/zrtp_log.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_log.c

libzrtp_a-zrtp_log.obj: $(top_srcdir)/src/zrtp_log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_log.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_log.Tpo -c -o libzrtp_a-zrtp_log.obj `if test -f '$(top_srcdir)/src/zrtp_log.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_log.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_log.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_log.Tpo $(DEPDIR)/libzrtp_a-zrtp_log.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_log.c' object='libzrtp_a-zrtp_log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_log.obj `if test -f '$(top_srcdir)/src/zrtp_log.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_log.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_log.c'; fi`

libzrtp_a-zrtp_pbx.o: $(top_srcdir)/src/zrtp_pbx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_pbx.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_pbx.Tpo -c -o libzrtp_a-zrtp_pbx.o `test -f '$(top_srcdir)/src/zrtp_pbx.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_pbx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_pbx.Tpo $(DEPDIR)/libzrtp_a-zrtp_pbx.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_pbx.c' object='libzrtp_a-zrtp_pbx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_pbx.o `test -f '$(top_srcdir)/src/zrtp_pbx.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_pbx.c

libzrtp_a-zrtp_pbx.obj: $(top_srcdir)/src/zrtp_pbx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_pbx.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_pbx.Tpo -c -o libzrtp_a-zrtp_pbx.obj `if test -f '$(top_srcdir)/src/zrtp_pbx.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_pbx.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_pbx.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_pbx.Tpo $(DEPDIR)/libzrtp_a-zrtp_pbx.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_pbx.c' object='libzrtp_a-zrtp_pbx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_pbx.obj `if test -f '$(top_srcdir)/src/zrtp_pbx.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_pbx.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_pbx.c'; fi`

libzrtp_a-zrtp_protocol.o: $(top_srcdir)/src/zrtp_protocol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_protocol.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_protocol.Tpo -c -o libzrtp_a-zrtp_protocol.o `test -f '$(top_srcdir)/src/zrtp_protocol.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_protocol.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_protocol.Tpo $(DEPDIR)/libzrtp_a-zrtp_protocol.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_protocol.c' object='libzrtp_a-zrtp_protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_protocol.o `test -f '$(top_srcdir)/src/zrtp_protocol.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_protocol.c

libzrtp_a-zrtp_protocol.obj: $(top_srcdir)/src/zrtp_protocol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_protocol.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_protocol.Tpo -c -o libzrtp_a-zrtp_protocol.obj `if test -f '$(top_srcdir)/src/zrtp_protocol.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_protocol.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_protocol.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_protocol.Tpo $(DEPDIR)/libzrtp_a-zrtp_protocol.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_protocol.c' object='libzrtp_a-zrtp_protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_protocol.obj `if test -f '$(top_srcdir)/src/zrtp_protocol.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_protocol.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_protocol.c'; fi`

libzrtp_a-zrtp_responder.o: $(top_srcdir)/src/zrtp_responder.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_responder.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_responder.Tpo -c -o libzrtp_a-zrtp_responder.o `test -f '$(top_srcdir)/src/zrtp_responder.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_responder.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_responder.Tpo $(DEPDIR)/libzrtp_a-zrtp_responder.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_responder.c' object='libzrtp_a-zrtp_responder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_responder.o `test -f '$(top_srcdir)/src/zrtp_responder.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_responder.c

libzrtp_a-zrtp_responder.obj: $(top_srcdir)/src/zrtp_responder.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_responder.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_responder.Tpo -c -o libzrtp_a-zrtp_responder.obj `if test -f '$(top_srcdir)/src/zrtp_responder.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_responder.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_responder.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_responder.Tpo $(DEPDIR)/libzrtp_a-zrtp_responder.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_responder.c' object='libzrtp_a-zrtp_responder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_responder.obj `if test -f '$(top_srcdir)/src/zrtp_responder.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_responder.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_responder.c'; fi`

libzrtp_a-zrtp_rng.o: $(top_srcdir)/src/zrtp_rng.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_rng.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_rng.Tpo -c -o libzrtp_a-zrtp_rng.o `test -f '$(top_srcdir)/src/zrtp_rng.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_rng.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_rng.Tpo $(DEPDIR)/libzrtp_a-zrtp_rng.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_rng.c' object='libzrtp_a-zrtp_rng.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_rng.o `test -f '$(top_srcdir)/src/zrtp_rng.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_rng.c

libzrtp_a-zrtp_rng.obj: $(top_srcdir)/src/zrtp_rng.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_rng.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_rng.Tpo -c -o libzrtp_a-zrtp_rng.obj `if test -f '$(top_srcdir)/src/zrtp_rng.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_rng.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_rng.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_rng.Tpo $(DEPDIR)/libzrtp_a-zrtp_rng.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_rng.c' object='libzrtp_a-zrtp_rng.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_rng.obj `if test -f '$(top_srcdir)/src/zrtp_rng.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_rng.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_rng.c'; fi`

libzrtp_a-zrtp_sdes.o: $(top_srcdir)/src/zrtp_sdes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_sdes.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_sdes.Tpo -c -o libzrtp_a-zrtp_sdes.o `test -f '$(top_srcdir)/src/zrtp_sdes.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_sdes.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_sdes.Tpo $(DEPDIR)/libzrtp_a-zrtp_sdes.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_sdes.c' object='libzrtp_a-zrtp_sdes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_sdes.o `test -f '$(top_srcdir)/src/zrtp_sdes.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_sdes.c

libzrtp_a-zrtp_sdes.obj: $(top_srcdir)/src/zrtp_sdes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_sdes.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_sdes.Tpo -c -o libzrtp_a-zrtp_sdes.obj `if test -f '$(top_srcdir)/src/zrtp_sdes.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_sdes.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_sdes.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_sdes.Tpo $(DEPDIR)/libzrtp_a-zrtp_sdes.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_sdes.c' object='libzrtp_a-zrtp_sdes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_sdes.obj `if test -f '$(top_srcdir)/src/zrtp_sdes.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_sdes.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_sdes.c'; fi`

libzrtp_a-zrtp_srtp_builtin.o: $(top_srcdir)/src/zrtp_srtp_builtin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_srtp_builtin.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_srtp_builtin.Tpo -c -o libzrtp_a-zrtp_srtp_builtin.o `test -f '$(top_srcdir)/src/zrtp_srtp_builtin.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_srtp_builtin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_srtp_builtin.Tpo $(DEPDIR)/libzrtp_a-zrtp_srtp_builtin.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_srtp_builtin.c' object='libzrtp_a-zrtp_srtp_builtin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_srtp_builtin.o `test -f '$(top_srcdir)/src/zrtp_srtp_builtin.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_srtp_builtin.c

libzrtp_a-zrtp_srtp_builtin.obj: $(top_srcdir)/src/zrtp_srtp_builtin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_srtp_builtin.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_srtp_builtin.Tpo -c -o libzrtp_a-zrtp_srtp_builtin.obj `if test -f '$(top_srcdir)/src/zrtp_srtp_builtin.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_srtp_builtin.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_srtp_builtin.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_srtp_builtin.Tpo $(DEPDIR)/libzrtp_a-zrtp_srtp_builtin.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_srtp_builtin.c' object='libzrtp_a-zrtp_srtp_builtin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_srtp_builtin.obj `if test -f '$(top_srcdir)/src/zrtp_srtp_builtin.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_srtp_builtin.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_srtp_builtin.c'; fi`

libzrtp_a-zrtp_string.o: $(top_srcdir)/src/zrtp_string.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_string.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_string.Tpo -c -o libzrtp_a-zrtp_string.o `test -f '$(top_srcdir)/src/zrtp_string.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_string.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_string.Tpo $(DEPDIR)/libzrtp_a-zrtp_string.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_string.c' object='libzrtp_a-zrtp_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_string.o `test -f '$(top_srcdir)/src/zrtp_string.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_string.c

libzrtp_a-zrtp_string.obj: $(top_srcdir)/src/zrtp_string.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_string.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_string.Tpo -c -o libzrtp_a-zrtp_string.obj `if test -f '$(top_srcdir)/src/zrtp_string.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_string.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_string.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_string.Tpo $(DEPDIR)/libzrtp_a-zrtp_string.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_string.c' object='libzrtp_a-zrtp_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_string.obj `if test -f '$(top_srcdir)/src/zrtp_string.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_string.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_string.c'; fi`

libzrtp_a-zrtp_utils.o: $(top_srcdir)/src/zrtp_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_utils.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_utils.Tpo -c -o libzrtp_a-zrtp_utils.o `test -f '$(top_srcdir)/src/zrtp_utils.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_utils.Tpo $(DEPDIR)/libzrtp_a-zrtp_utils.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_utils.c' object='libzrtp_a-zrtp_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_utils.o `test -f '$(top_srcdir)/src/zrtp_utils.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_utils.c

libzrtp_a-zrtp_utils.obj: $(top_srcdir)/src/zrtp_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_utils.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_utils.Tpo -c -o libzrtp_a-zrtp_utils.obj `if test -f '$(top_srcdir)/src/zrtp_utils.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_utils.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_utils.Tpo $(DEPDIR)/libzrtp_a-zrtp_utils.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_utils.c' object='libzrtp_a-zrtp_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_utils.obj `if test -f '$(top_srcdir)/src/zrtp_utils.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_utils.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_utils.c'; fi`

libzrtp_a-zrtp_utils_proto.o: $(top_srcdir)/src/zrtp_utils_proto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_utils_proto.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_utils_proto.Tpo -c -o libzrtp_a-zrtp_utils_proto.o `test -f '$(top_srcdir)/src/zrtp_utils_proto.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_utils_proto.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_utils_proto.Tpo $(DEPDIR)/libzrtp_a-zrtp_utils_proto.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_utils_proto.c' object='libzrtp_a-zrtp_utils_proto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_utils_proto.o `test -f '$(top_srcdir)/src/zrtp_utils_proto.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_utils_proto.c

libzrtp_a-zrtp_utils_proto.obj: $(top_srcdir)/src/zrtp_utils_proto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_utils_proto.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_utils_proto.Tpo -c -o libzrtp_a-zrtp_utils_proto.obj `if test -f '$(top_srcdir)/src/zrtp_utils_proto.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_utils_proto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_utils_proto.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_utils_proto.Tpo $(DEPDIR)/libzrtp_a-zrtp_utils_proto.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_utils_proto.c' object='libzrtp_a-zrtp_utils_proto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_utils_proto.obj `if test -f '$(top_srcdir)/src/zrtp_utils_proto.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_utils_proto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_utils_proto.c'; fi`

libzrtp_a-aes_modes.o: $(top_srcdir)/third_party/bgaes/aes_modes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-aes_modes.o -MD -MP -MF $(DEPDIR)/libzrtp_a-aes_modes.Tpo -c -o libzrtp_a-aes_modes.o `test -f '$(top_srcdir)/third_party/bgaes/aes_modes.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/aes_modes.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-aes_modes.Tpo $(DEPDIR)/libzrtp_a-aes_modes.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/aes_modes.c' object='libzrtp_a-aes_modes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-aes_modes.o `test -f '$(top_srcdir)/third_party/bgaes/aes_modes.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/aes_modes.c

libzrtp_a-aes_modes.obj: $(top_srcdir)/third_party/bgaes/aes_modes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-aes_modes.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-aes_modes.Tpo -c -o libzrtp_a-aes_modes.obj `if test -f '$(top_srcdir)/third_party/bgaes/aes_modes.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/aes_modes.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/aes_modes.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-aes_modes.Tpo $(DEPDIR)/libzrtp_a-aes_modes.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/aes_modes.c' object='libzrtp_a-aes_modes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-aes_modes.obj `if test -f '$(top_srcdir)/third_party/bgaes/aes_modes.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/aes_modes.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/aes_modes.c'; fi`

libzrtp_a-aescrypt.o: $(top_srcdir)/third_party/bgaes/aescrypt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-aescrypt.o -MD -MP -MF $(DEPDIR)/libzrtp_a-aescrypt.Tpo -c -o libzrtp_a-aescrypt.o `test -f '$(top_srcdir)/third_party/bgaes/aescrypt.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/aescrypt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-aescrypt.Tpo $(DEPDIR)/libzrtp_a-aescrypt.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/aescrypt.c' object='libzrtp_a-aescrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-aescrypt.o `test -f '$(top_srcdir)/third_party/bgaes/aescrypt.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/aescrypt.c

libzrtp_a-aescrypt.obj: $(top_srcdir)/third_party/bgaes/aescrypt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-aescrypt.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-aescrypt.Tpo -c -o libzrtp_a-aescrypt.obj `if test -f '$(top_srcdir)/third_party/bgaes/aescrypt.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/aescrypt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/aescrypt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-aescrypt.Tpo $(DEPDIR)/libzrtp_a-aescrypt.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/aescrypt.c' object='libzrtp_a-aescrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-aescrypt.obj `if test -f '$(top_srcdir)/third_party/bgaes/aescrypt.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/aescrypt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/aescrypt.c'; fi`

libzrtp_a-aeskey.o: $(top_srcdir)/third_party/bgaes/aeskey.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-aeskey.o -MD -MP -MF $(DEPDIR)/libzrtp_a-aeskey.Tpo -c -o libzrtp_a-aeskey.o `test -f '$(top_srcdir)/third_party/bgaes/aeskey.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/aeskey.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-aeskey.Tpo $(DEPDIR)/libzrtp_a-aeskey.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/aeskey.c' object='libzrtp_a-aeskey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-aeskey.o `test -f '$(top_srcdir)/third_party/bgaes/aeskey.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/aeskey.c

libzrtp_a-aeskey.obj: $(top_srcdir)/third_party/bgaes/aeskey.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-aeskey.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-aeskey.Tpo -c -o libzrtp_a-aeskey.obj `if test -f '$(top_srcdir)/third_party/bgaes/aeskey.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/aeskey.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/aeskey.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-aeskey.Tpo $(DEPDIR)/libzrtp_a-aeskey.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/aeskey.c' object='libzrtp_a-aeskey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-aeskey.obj `if test -f '$(top_srcdir)/third_party/bgaes/aeskey.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/aeskey.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/aeskey.c'; fi`

libzrtp_a-aestab.o: $(top_srcdir)/third_party/bgaes/aestab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-aestab.o -MD -MP -MF $(DEPDIR)/libzrtp_a-aestab.Tpo -c -o libzrtp_a-aestab.o `test -f '$(top_srcdir)/third_party/bgaes/aestab.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/aestab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-aestab.Tpo $(DEPDIR)/libzrtp_a-aestab.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/aestab.c' object='libzrtp_a-aestab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-aestab.o `test -f '$(top_srcdir)/third_party/bgaes/aestab.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/aestab.c

libzrtp_a-aestab.obj: $(top_srcdir)/third_party/bgaes/aestab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-aestab.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-aestab.Tpo -c -o libzrtp_a-aestab.obj `if test -f '$(top_srcdir)/third_party/bgaes/aestab.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/aestab.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/aestab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-aestab.Tpo $(DEPDIR)/libzrtp_a-aestab.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/aestab.c' object='libzrtp_a-aestab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-aestab.obj `if test -f '$(top_srcdir)/third_party/bgaes/aestab.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/aestab.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/aestab.c'; fi`

libzrtp_a-sha1.o: $(top_srcdir)/third_party/bgaes/sha1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-sha1.o -MD -MP -MF $(DEPDIR)/libzrtp_a-sha1.Tpo -c -o libzrtp_a-sha1.o `test -f '$(top_srcdir)/third_party/bgaes/sha1.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/sha1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-sha1.Tpo $(DEPDIR)/libzrtp_a-sha1.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/sha1.c' object='libzrtp_a-sha1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-sha1.o `test -f '$(top_srcdir)/third_party/bgaes/sha1.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/sha1.c

libzrtp_a-sha1.obj: $(top_srcdir)/third_party/bgaes/sha1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-sha1.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-sha1.Tpo -c -o libzrtp_a-sha1.obj `if test -f '$(top_srcdir)/third_party/bgaes/sha1.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/sha1.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/sha1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-sha1.Tpo $(DEPDIR)/libzrtp_a-sha1.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/sha1.c' object='libzrtp_a-sha1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-sha1.obj `if test -f '$(top_srcdir)/third_party/bgaes/sha1.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/sha1.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/sha1.c'; fi`

libzrtp_a-sha2.o: $(top_srcdir)/third_party/bgaes/sha2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-sha2.o -MD -MP -MF $(DEPDIR)/libzrtp_a-sha2.Tpo -c -o libzrtp_a-sha2.o `test -f '$(top_srcdir)/third_party/bgaes/sha2.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/sha2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-sha2.Tpo $(DEPDIR)/libzrtp_a-sha2.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/sha2.c' object='libzrtp_a-sha2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-sha2.o `test -f '$(top_srcdir)/third_party/bgaes/sha2.c' || echo '$(srcdir)/'`$(top_srcdir)/third_party/bgaes/sha2.c

libzrtp_a-sha2.obj: $(top_srcdir)/third_party/bgaes/sha2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-sha2.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-sha2.Tpo -c -o libzrtp_a-sha2.obj `if test -f '$(top_srcdir)/third_party/bgaes/sha2.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/sha2.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/sha2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-sha2.Tpo $(DEPDIR)/libzrtp_a-sha2.Po
#	$(AM_V_CC)source='$(top_srcdir)/third_party/bgaes/sha2.c' object='libzrtp_a-sha2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-sha2.obj `if test -f '$(top_srcdir)/third_party/bgaes/sha2.c'; then $(CYGPATH_W) '$(top_srcdir)/third_party/bgaes/sha2.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/third_party/bgaes/sha2.c'; fi`

libzrtp_a-zrtp_engine_driven.o: $(top_srcdir)/src/zrtp_engine_driven.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_engine_driven.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_engine_driven.Tpo -c -o libzrtp_a-zrtp_engine_driven.o `test -f '$(top_srcdir)/src/zrtp_engine_driven.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_engine_driven.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_engine_driven.Tpo $(DEPDIR)/libzrtp_a-zrtp_engine_driven.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_engine_driven.c' object='libzrtp_a-zrtp_engine_driven.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_engine_driven.o `test -f '$(top_srcdir)/src/zrtp_engine_driven.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_engine_driven.c

libzrtp_a-zrtp_engine_driven.obj: $(top_srcdir)/src/zrtp_engine_driven.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_engine_driven.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_engine_driven.Tpo -c -o libzrtp_a-zrtp_engine_driven.obj `if test -f '$(top_srcdir)/src/zrtp_engine_driven.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_engine_driven.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_engine_driven.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_engine_driven.Tpo $(DEPDIR)/libzrtp_a-zrtp_engine_driven.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_engine_driven.c' object='libzrtp_a-zrtp_engine_driven.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_engine_driven.obj `if test -f '$(top_srcdir)/src/zrtp_engine_driven.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_engine_driven.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_engine_driven.c'; fi`

libzrtp_a-zrtp_cache_db.o: $(top_srcdir)/src/zrtp_cache_db.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_cache_db.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_cache_db.Tpo -c -o libzrtp_a-zrtp_cache_db.o `test -f '$(top_srcdir)/src/zrtp_cache_db.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_cache_db.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_cache_db.Tpo $(DEPDIR)/libzrtp_a-zrtp_cache_db.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_cache_db.c' object='libzrtp_a-zrtp_cache_db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_cache_db.o `test -f '$(top_srcdir)/src/zrtp_cache_db.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_cache_db.c

libzrtp_a-zrtp_cache_db.obj: $(top_srcdir)/src/zrtp_cache_db.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_cache_db.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_cache_db.Tpo -c -o libzrtp_a-zrtp_cache_db.obj `if test -f '$(top_srcdir)/src/zrtp_cache_db.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_cache_db.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_cache_db.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_cache_db.Tpo $(DEPDIR)/libzrtp_a-zrtp_cache_db.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_cache_db.c' object='libzrtp_a-zrtp_cache_db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_cache_db.obj `if test -f '$(top_srcdir)/src/zrtp_cache_db.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_cache_db.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_cache_db.c'; fi`

libzrtp_a-zrtp_cache_sqlite_backend.o: $(top_srcdir)/src/zrtp_cache_sqlite_backend.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_cache_sqlite_backend.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_cache_sqlite_backend.Tpo -c -o libzrtp_a-zrtp_cache_sqlite_backend.o `test -f '$(top_srcdir)/src/zrtp_cache_sqlite_backend.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_cache_sqlite_backend.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_cache_sqlite_backend.Tpo $(DEPDIR)/libzrtp_a-zrtp_cache_sqlite_backend.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_cache_sqlite_backend.c' object='libzrtp_a-zrtp_cache_sqlite_backend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_cache_sqlite_backend.o `test -f '$(top_srcdir)/src/zrtp_cache_sqlite_backend.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_cache_sqlite_backend.c

libzrtp_a-zrtp_cache_sqlite_backend.obj: $(top_srcdir)/src/zrtp_cache_sqlite_backend.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_cache_sqlite_backend.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_cache_sqlite_backend.Tpo -c -o libzrtp_a-zrtp_cache_sqlite_backend.obj `if test -f '$(top_srcdir)/src/zrtp_cache_sqlite_backend.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_cache_sqlite_backend.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_cache_sqlite_backend.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_cache_sqlite_backend.Tpo $(DEPDIR)/libzrtp_a-zrtp_cache_sqlite_backend.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_cache_sqlite_backend.c' object='libzrtp_a-zrtp_cache_sqlite_backend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_cache_sqlite_backend.obj `if test -f '$(top_srcdir)/src/zrtp_cache_sqlite_backend.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_cache_sqlite_backend.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_cache_sqlite_backend.c'; fi`

libzrtp_a-zrtp_b64_decode.o: $(top_srcdir)/src/zrtp_b64_decode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_b64_decode.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_b64_decode.Tpo -c -o libzrtp_a-zrtp_b64_decode.o `test -f '$(top_srcdir)/src/zrtp_b64_decode.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_b64_decode.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_b64_decode.Tpo $(DEPDIR)/libzrtp_a-zrtp_b64_decode.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_b64_decode.c' object='libzrtp_a-zrtp_b64_decode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_b64_decode.o `test -f '$(top_srcdir)/src/zrtp_b64_decode.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_b64_decode.c

libzrtp_a-zrtp_b64_decode.obj: $(top_srcdir)/src/zrtp_b64_decode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_b64_decode.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_b64_decode.Tpo -c -o libzrtp_a-zrtp_b64_decode.obj `if test -f '$(top_srcdir)/src/zrtp_b64_decode.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_b64_decode.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_b64_decode.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_b64_decode.Tpo $(DEPDIR)/libzrtp_a-zrtp_b64_decode.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_b64_decode.c' object='libzrtp_a-zrtp_b64_decode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_b64_decode.obj `if test -f '$(top_srcdir)/src/zrtp_b64_decode.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_b64_decode.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_b64_decode.c'; fi`

libzrtp_a-zrtp_b64_encode.o: $(top_srcdir)/src/zrtp_b64_encode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_b64_encode.o -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_b64_encode.Tpo -c -o libzrtp_a-zrtp_b64_encode.o `test -f '$(top_srcdir)/src/zrtp_b64_encode.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_b64_encode.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_b64_encode.Tpo $(DEPDIR)/libzrtp_a-zrtp_b64_encode.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_b64_encode.c' object='libzrtp_a-zrtp_b64_encode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_b64_encode.o `test -f '$(top_srcdir)/src/zrtp_b64_encode.c' || echo '$(srcdir)/'`$(top_srcdir)/src/zrtp_b64_encode.c

libzrtp_a-zrtp_b64_encode.obj: $(top_srcdir)/src/zrtp_b64_encode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libzrtp_a-zrtp_b64_encode.obj -MD -MP -MF $(DEPDIR)/libzrtp_a-zrtp_b64_encode.Tpo -c -o libzrtp_a-zrtp_b64_encode.obj `if test -f '$(top_srcdir)/src/zrtp_b64_encode.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_b64_encode.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_b64_encode.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzrtp_a-zrtp_b64_encode.Tpo $(DEPDIR)/libzrtp_a-zrtp_b64_encode.Po
#	$(AM_V_CC)source='$(top_srcdir)/src/zrtp_b64_encode.c' object='libzrtp_a-zrtp_b64_encode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzrtp_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libzrtp_a-zrtp_b64_encode.obj `if test -f '$(top_srcdir)/src/zrtp_b64_encode.c'; then $(CYGPATH_W) '$(top_srcdir)/src/zrtp_b64_encode.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/zrtp_b64_encode.c'; fi`

cache_test-cmockery.o: $(top_srcdir)/test/cmockery/cmockery.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cache_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cache_test-cmockery.o -MD -MP -MF $(DEPDIR)/cache_test-cmockery.Tpo -c -o cache_test-cmockery.o `test -f '$(top_srcdir)/test/cmockery/cmockery.c' || echo '$(srcdir)/'`$(top_srcdir)/test/cmockery/cmockery.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cache_test-cmockery.Tpo $(DEPDIR)/cache_test-cmockery.Po
#	$(AM_V_CC)source='$(top_srcdir)/test/cmockery/cmockery.c' object='cache_test-cmockery.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cache_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cache_test-cmockery.o `test -f '$(top_srcdir)/test/cmockery/cmockery.c' || echo '$(srcdir)/'`$(top_srcdir)/test/cmockery/cmockery.c

cache_test-cmockery.obj: $(top_srcdir)/test/cmockery/cmockery.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cache_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cache_test-cmockery.obj -MD -MP -MF $(DEPDIR)/cache_test-cmockery.Tpo -c -o cache_test-cmockery.obj `if test -f '$(top_srcdir)/test/cmockery/cmockery.c'; then $(CYGPATH_W) '$(top_srcdir)/test/cmockery/cmockery.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/test/cmockery/cmockery.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cache_test-cmockery.Tpo $(DEPDIR)/cache_test-cmockery.Po
#	$(AM_V_CC)source='$(top_srcdir)/test/cmockery/cmockery.c' object='cache_test-cmockery.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cache_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cache_test-cmockery.obj `if test -f '$(top_srcdir)/test/cmockery/cmockery.c'; then $(CYGPATH_W) '$(top_srcdir)/test/cmockery/cmockery.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/test/cmockery/cmockery.c'; fi`

cache_test-cache_test.o: $(top_srcdir)/test/cache_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cache_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cache_test-cache_test.o -MD -MP -MF $(DEPDIR)/cache_test-cache_test.Tpo -c -o cache_test-cache_test.o `test -f '$(top_srcdir)/test/cache_test.c' || echo '$(srcdir)/'`$(top_srcdir)/test/cache_test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cache_test-cache_test.Tpo $(DEPDIR)/cache_test-cache_test.Po
#	$(AM_V_CC)source='$(top_srcdir)/test/cache_test.c' object='cache_test-cache_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cache_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cache_test-cache_test.o `test -f '$(top_srcdir)/test/cache_test.c' || echo '$(srcdir)/'`$(top_srcdir)/test/cache_test.c

cache_test-cache_test.obj: $(top_srcdir)/test/cache_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cache_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cache_test-cache_test.obj -MD -MP -MF $(DEPDIR)/cache_test-cache_test.Tpo -c -o cache_test-cache_test.obj `if test -f '$(top_srcdir)/test/cache_test.c'; then $(CYGPATH_W) '$(top_srcdir)/test/cache_test.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/test/cache_test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cache_test-cache_test.Tpo $(DEPDIR)/cache_test-cache_test.Po
#	$(AM_V_CC)source='$(top_srcdir)/test/cache_test.c' object='cache_test-cache_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cache_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cache_test-cache_test.obj `if test -f '$(top_srcdir)/test/cache_test.c'; then $(CYGPATH_W) '$(top_srcdir)/test/cache_test.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/test/cache_test.c'; fi`
install-libzrtp_includeHEADERS: $(libzrtp_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libzrtp_include_HEADERS)'; test -n "$(libzrtp_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libzrtp_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libzrtp_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libzrtp_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libzrtp_includedir)" || exit $$?; \
	done

uninstall-libzrtp_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libzrtp_include_HEADERS)'; test -n "$(libzrtp_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libzrtp_includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-recursive
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libzrtp_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-libzrtp_includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libLIBRARIES uninstall-libzrtp_includeHEADERS

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-checkPROGRAMS \
	clean-cscope clean-generic clean-libLIBRARIES cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-libzrtp_includeHEADERS \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-libLIBRARIES \
	uninstall-libzrtp_includeHEADERS

.PRECIOUS: Makefile


#doc: .stamp-doc
#.stamp-doc:
#	(cd doc && $(DOXYGEN) Doxyfile)
#	touch $@

uninstall:
	rm -rf $(prefix)/include/libzrtp
	rm -f $(prefix)/lib/libzrtp.a

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
